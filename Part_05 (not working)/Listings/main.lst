C51 COMPILER V9.60.7.0   MAIN                                                              09/09/2024 14:57:24 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg51.h>
   2          #include "main.h"
   3          #include<intrins.h>   //For using [_nop_()]
   4          
   5          //sbit scl = P2^1;
   6          //sbit sda = P2^0;
   7          
   8          sbit scl = P2^1; // Ensure correct syntax
   9          sbit sda = P2^0;
  10          
  11          // Check the header file for issues
  12          #include "main.h"
  13          
  14          
  15          bit ack;
  16          char i = 0, ii = 0, j = 0, jj = 0, k = 0;  // Ensure initialization of 'k'
  17          unsigned char Counter = 0x70;              // Ensure correct data type for Counter
  18          unsigned char Read_var = 0x01;
  19          unsigned char message[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
  20          unsigned char values[8];
  21          
  22          // Function prototypes
  23          void display_num_7seg(unsigned char num);
  24          void aknowledge();
  25          void start();
  26          void stop();
  27          void send_byte(unsigned char value);
  28          unsigned char read_byte();
  29          void save();
  30          unsigned char ReadEEPROM();
  31          void delay(unsigned int count);
  32          void timer_init();
  33          
  34          // Function definitions
  35          
  36          void aknowledge()   //acknowledge condition
  37          {
  38   1        scl = 1;
  39   1        _nop_();
  40   1        _nop_();
  41   1        scl = 0;
  42   1      } 
  43          
  44          void start()    //start condition
  45          {
  46   1        sda = 1;
  47   1        scl = 1;
  48   1        _nop_();         //No operation
  49   1        _nop_();
  50   1        sda = 0;
  51   1        scl = 0;
  52   1      }
  53          
  54          void stop()     //stop condition
C51 COMPILER V9.60.7.0   MAIN                                                              09/09/2024 14:57:24 PAGE 2   

  55          {
  56   1        sda = 0;
  57   1        scl = 1;
  58   1        _nop_();
  59   1        _nop_(); 
  60   1        sda = 1;
  61   1        scl = 0;
  62   1      }
  63          
  64          void send_byte(unsigned char value) //send byte serially
  65          { 
  66   1        for(i = 0; i < 8; i++)
  67   1        {
  68   2          sda = value / 128;      //extracting MSB
  69   2          value = value << 1;     //shifting left
  70   2          scl = 1;
  71   2          _nop_();
  72   2          _nop_();
  73   2          scl = 0;
  74   2        }
  75   1        ack = sda;          //reading acknowledge
  76   1        sda = 0;
  77   1      }
  78          
  79          unsigned char read_byte()     //reading from EEPROM serially
  80          {
  81   1        unsigned char reead = 0x00;
  82   1        sda = 1;
  83   1        for(i = 0; i < 8; i++)
  84   1        {
  85   2          reead = reead << 1;
  86   2          scl = 1;
  87   2          _nop_();
  88   2          _nop_();
  89   2          if(sda == 1)
  90   2            reead++;
  91   2          scl = 0;
  92   2        }
  93   1        sda = 0;
  94   1        return reead;       //Returns 8 bit data here
  95   1      } 
  96          
  97          void save()         //save in EEPROM
  98          {
  99   1        start();
 100   1        send_byte(0xA0);            //device address
 101   1        aknowledge();
 102   1        send_byte(0);           //word address
 103   1        aknowledge();
 104   1        send_byte(Counter);             //send data
 105   1        aknowledge();
 106   1        stop();   
 107   1        delay(10);  
 108   1      }
 109          
 110          unsigned char ReadEEPROM() {   // Changed the function name to ReadEEPROM
 111   1        unsigned char Data_var;
 112   1        start();
 113   1        send_byte(0xA0);
 114   1        aknowledge();
 115   1        send_byte(0);
 116   1        aknowledge();
C51 COMPILER V9.60.7.0   MAIN                                                              09/09/2024 14:57:24 PAGE 3   

 117   1        start();
 118   1        send_byte(0xA1);           //device address
 119   1        aknowledge();
 120   1        Data_var = read_byte();
 121   1        aknowledge();
 122   1        stop();
 123   1        delay(10);
 124   1        return Data_var;
 125   1      }
 126          
 127          void delay(unsigned int count)
 128          {
 129   1        int y, z;
 130   1        for(y = 0; y < count; y++)
 131   1          for(z = 0; z < 1275; z++);
 132   1      }
 133          
 134          void timer_init(){
 135   1         TMOD = 0x01;
 136   1         TH0 = 0xF7;
 137   1         TL0 = 0x15;
 138   1         TR0 = 1; /* Start timer */
 139   1         IE = 0x80;
 140   1         ET0 = 1;
 141   1         TF0 = 1;
 142   1      }
 143           
 144          void main()
 145          {
 146   1        timer_init();
 147   1        Counter = ReadEEPROM();  // Update the function call
 148   1        display_num_7seg(Counter);
 149   1        while(1)
 150   1        {
 151   2          if(Read_var == 0x01)
 152   2          {
 153   3            save();
 154   3            delay(10);
 155   3            display_num_7seg(Counter);
 156   3            Read_var = 0x00;
 157   3          }
 158   2        }
 159   1      }
 160          
 161          void display_num_7seg(unsigned char num)  // Make sure this function is defined only once
 162          {
 163   1        for(k = 2; k >= 0; k--)
 164   1        {
 165   2          values[k] = message[num % 10];
 166   2          num = num / 10;
 167   2        }
 168   1      }
 169          
 170          void timer1_interrupt(void) interrupt 1   //ISR 2.5 ms
 171          {
 172   1        TH0 = 0xF0;
 173   1        TL0 = 0x15;
 174   1        P2 |= 0x1C;
 175   1        P2 &= ~(jj << 2);
 176   1        P0 = values[jj];
 177   1        jj++;
 178   1        if(jj == 3){
C51 COMPILER V9.60.7.0   MAIN                                                              09/09/2024 14:57:24 PAGE 4   

 179   2          jj = 0;
 180   2          j++;
 181   2        }
 182   1        if(j == 100){
 183   2          Counter++;
 184   2          j = 0;
 185   2          Read_var = 0x01;
 186   2        }
 187   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    363    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
